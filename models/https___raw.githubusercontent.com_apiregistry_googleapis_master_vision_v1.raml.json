{"annotations":{"commons.Links":{"structuredValue":[{"title":"Developer Documentation","url":"https://cloud.google.com/vision/","role":"documentation"}],"name":"commons.Links"},"commons.Icons":{"structuredValue":[{"url":"http://www.google.com/images/icons/product/search-32.gif","name":"x32"},{"url":"http://www.google.com/images/icons/product/search-16.gif","name":"x16"}],"name":"commons.Icons"},"commons.Id":{"structuredValue":"vision:v1","name":"commons.Id"}},"uses":[{"key":"commons","value":"https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml"},{"key":"extras","value":"https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml"}],"types":[{"AnnotateImageRequest":{"name":"AnnotateImageRequest","displayName":"AnnotateImageRequest","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Request for performing Google Cloud Vision API tasks over a user-provided\nimage, with user-requested features.","properties":{"image":{"name":"image","displayName":"image","typePropertyKind":"TYPE_EXPRESSION","type":["Image"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"features":{"name":"features","displayName":"features","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"Requested features.","items":["Feature"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"imageContext":{"name":"imageContext","displayName":"imageContext","typePropertyKind":"TYPE_EXPRESSION","type":["ImageContext"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"AnnotateImageResponse":{"name":"AnnotateImageResponse","displayName":"AnnotateImageResponse","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Response to an image annotation request.","properties":{"safeSearchAnnotation":{"name":"safeSearchAnnotation","displayName":"safeSearchAnnotation","typePropertyKind":"TYPE_EXPRESSION","type":["SafeSearchAnnotation"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"landmarkAnnotations":{"name":"landmarkAnnotations","displayName":"landmarkAnnotations","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"If present, landmark detection completed successfully.","items":["EntityAnnotation"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"logoAnnotations":{"name":"logoAnnotations","displayName":"logoAnnotations","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"If present, logo detection completed successfully.","items":["EntityAnnotation"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"faceAnnotations":{"name":"faceAnnotations","displayName":"faceAnnotations","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"If present, face detection completed successfully.","items":["FaceAnnotation"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"textAnnotations":{"name":"textAnnotations","displayName":"textAnnotations","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"If present, text (OCR) detection completed successfully.","items":["EntityAnnotation"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"error":{"name":"error","displayName":"error","typePropertyKind":"TYPE_EXPRESSION","type":["Status"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"labelAnnotations":{"name":"labelAnnotations","displayName":"labelAnnotations","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"If present, label detection completed successfully.","items":["EntityAnnotation"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"imagePropertiesAnnotation":{"name":"imagePropertiesAnnotation","displayName":"imagePropertiesAnnotation","typePropertyKind":"TYPE_EXPRESSION","type":["ImageProperties"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"BatchAnnotateImagesRequest":{"name":"BatchAnnotateImagesRequest","displayName":"BatchAnnotateImagesRequest","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Multiple image annotation requests are batched into a single service call.","properties":{"requests":{"name":"requests","displayName":"requests","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"Individual image annotation requests for this batch.","items":["AnnotateImageRequest"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"BatchAnnotateImagesResponse":{"name":"BatchAnnotateImagesResponse","displayName":"BatchAnnotateImagesResponse","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Response to a batch image annotation request.","properties":{"responses":{"name":"responses","displayName":"responses","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"Individual responses to image annotation requests within the batch.","items":["AnnotateImageResponse"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"BoundingPoly":{"name":"BoundingPoly","displayName":"BoundingPoly","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"A bounding polygon for the detected image annotation.","properties":{"vertices":{"name":"vertices","displayName":"vertices","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"The bounding polygon vertices.","items":["Vertex"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Color":{"name":"Color","displayName":"Color","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Represents a color in the RGBA color space. This representation is designed\nfor simplicity of conversion to/from color representations in various\nlanguages over compactness; for example, the fields of this representation\ncan be trivially provided to the constructor of \"java.awt.Color\" in Java; it\ncan also be trivially provided to UIColor's \"+colorWithRed:green:blue:alpha\"\nmethod in iOS; and, with just a little work, it can be easily formatted into\na CSS \"rgba()\" string in JavaScript, as well. Here are some examples:\n\nExample (Java):\n\n     import com.google.type.Color;\n\n     // ...\n     public static java.awt.Color fromProto(Color protocolor) {\n       float alpha = protocolor.hasAlpha()\n           ? protocolor.getAlpha().getValue()\n           : 1.0;\n\n       return new java.awt.Color(\n           protocolor.getRed(),\n           protocolor.getGreen(),\n           protocolor.getBlue(),\n           alpha);\n     }\n\n     public static Color toProto(java.awt.Color color) {\n       float red = (float) color.getRed();\n       float green = (float) color.getGreen();\n       float blue = (float) color.getBlue();\n       float denominator = 255.0;\n       Color.Builder resultBuilder =\n           Color\n               .newBuilder()\n               .setRed(red / denominator)\n               .setGreen(green / denominator)\n               .setBlue(blue / denominator);\n       int alpha = color.getAlpha();\n       if (alpha != 255) {\n         result.setAlpha(\n             FloatValue\n                 .newBuilder()\n                 .setValue(((float) alpha) / denominator)\n                 .build());\n       }\n       return resultBuilder.build();\n     }\n     // ...\n\nExample (iOS / Obj-C):\n\n     // ...\n     static UIColor* fromProto(Color* protocolor) {\n        float red = [protocolor red];\n        float green = [protocolor green];\n        float blue = [protocolor blue];\n        FloatValue* alpha_wrapper = [protocolor alpha];\n        float alpha = 1.0;\n        if (alpha_wrapper != nil) {\n          alpha = [alpha_wrapper value];\n        }\n        return [UIColor colorWithRed:red green:green blue:blue alpha:alpha];\n     }\n\n     static Color* toProto(UIColor* color) {\n         CGFloat red, green, blue, alpha;\n         if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) {\n           return nil;\n         }\n         Color* result = [Color alloc] init];\n         [result setRed:red];\n         [result setGreen:green];\n         [result setBlue:blue];\n         if (alpha <= 0.9999) {\n           [result setAlpha:floatWrapperWithValue(alpha)];\n         }\n         [result autorelease];\n         return result;\n    }\n    // ...\n\n Example (JavaScript):\n\n    // ...\n\n    var protoToCssColor = function(rgb_color) {\n       var redFrac = rgb_color.red || 0.0;\n       var greenFrac = rgb_color.green || 0.0;\n       var blueFrac = rgb_color.blue || 0.0;\n       var red = Math.floor(redFrac * 255);\n       var green = Math.floor(greenFrac * 255);\n       var blue = Math.floor(blueFrac * 255);\n\n       if (!('alpha' in rgb_color)) {\n          return rgbToCssColor_(red, green, blue);\n       }\n\n       var alphaFrac = rgb_color.alpha.value || 0.0;\n       var rgbParams = [red, green, blue].join(',');\n       return ['rgba(', rgbParams, ',', alphaFrac, ')'].join('');\n    };\n\n    var rgbToCssColor_ = function(red, green, blue) {\n      var rgbNumber = new Number((red << 16) | (green << 8) | blue);\n      var hexString = rgbNumber.toString(16);\n      var missingZeros = 6 - hexString.length;\n      var resultBuilder = ['#'];\n      for (var i = 0; i < missingZeros; i++) {\n         resultBuilder.push('0');\n      }\n      resultBuilder.push(hexString);\n      return resultBuilder.join('');\n    };\n\n    // ...","properties":{"red":{"name":"red","displayName":"red","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"The amount of red in the color as a value in the interval [0, 1].","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"green":{"name":"green","displayName":"green","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"The amount of green in the color as a value in the interval [0, 1].","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"blue":{"name":"blue","displayName":"blue","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"The amount of blue in the color as a value in the interval [0, 1].","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"alpha":{"name":"alpha","displayName":"alpha","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"The fraction of this color that should be applied to the pixel. That is,\nthe final pixel color is defined by the equation:\n\n  pixel color = alpha * (this color) + (1.0 - alpha) * (background color)\n\nThis means that a value of 1.0 corresponds to a solid color, whereas\na value of 0.0 corresponds to a completely transparent color. This\nuses a wrapper message rather than a simple float scalar so that it is\npossible to distinguish between a default value and the value being unset.\nIf omitted, this color object is to be rendered as a solid color\n(as if the alpha value had been explicitly given with a value of 1.0).","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"ColorInfo":{"name":"ColorInfo","displayName":"ColorInfo","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Color information consists of RGB channels, score and fraction of\nimage the color occupies in the image.","properties":{"score":{"name":"score","displayName":"score","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"Image-specific score for this color. Value in range [0, 1].","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"color":{"name":"color","displayName":"color","typePropertyKind":"TYPE_EXPRESSION","type":["Color"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"pixelFraction":{"name":"pixelFraction","displayName":"pixelFraction","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"Stores the fraction of pixels the color occupies in the image.\nValue in range [0, 1].","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"DominantColorsAnnotation":{"name":"DominantColorsAnnotation","displayName":"DominantColorsAnnotation","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Set of dominant colors and their corresponding scores.","properties":{"colors":{"name":"colors","displayName":"colors","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"RGB color values, with their score and pixel fraction.","items":["ColorInfo"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"EntityAnnotation":{"name":"EntityAnnotation","displayName":"EntityAnnotation","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Set of detected entity features.","properties":{"score":{"name":"score","displayName":"score","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"Overall score of the result. Range [0, 1].","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"confidence":{"name":"confidence","displayName":"confidence","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"The accuracy of the entity detection in an image.\nFor example, for an image containing 'Eiffel Tower,' this field represents\nthe confidence that there is a tower in the query image. Range [0, 1].","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"mid":{"name":"mid","displayName":"mid","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Opaque entity ID. Some IDs might be available in Knowledge Graph(KG).\nFor more details on KG please see:\nhttps://developers.google.com/knowledge-graph/","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"description":{"name":"description","displayName":"description","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Entity textual description, expressed in its <code>locale</code> language.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"topicality":{"name":"topicality","displayName":"topicality","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"The relevancy of the ICA (Image Content Annotation) label to the\nimage. For example, the relevancy of 'tower' to an image containing\n'Eiffel Tower' is likely higher than an image containing a distant towering\nbuilding, though the confidence that there is a tower may be the same.\nRange [0, 1].","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"locations":{"name":"locations","displayName":"locations","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"The location information for the detected entity. Multiple\n<code>LocationInfo</code> elements can be present since one location may\nindicate the location of the scene in the query image, and another the\nlocation of the place where the query image was taken. Location information\nis usually present for landmarks.","items":["LocationInfo"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"locale":{"name":"locale","displayName":"locale","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The language code for the locale in which the entity textual\n<code>description</code> (next field) is expressed.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"boundingPoly":{"name":"boundingPoly","displayName":"boundingPoly","typePropertyKind":"TYPE_EXPRESSION","type":["BoundingPoly"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"properties":{"name":"properties","displayName":"properties","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"Some entities can have additional optional <code>Property</code> fields.\nFor example a different kind of score or string that qualifies the entity.","items":["Property"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"FaceAnnotation":{"name":"FaceAnnotation","displayName":"FaceAnnotation","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"A face annotation object contains the results of face detection.","properties":{"surpriseLikelihood":{"name":"surpriseLikelihood","displayName":"surpriseLikelihood","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Surprise likelihood.","enum":["UNKNOWN","VERY_UNLIKELY","UNLIKELY","POSSIBLE","LIKELY","VERY_LIKELY"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"headwearLikelihood":{"name":"headwearLikelihood","displayName":"headwearLikelihood","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Headwear likelihood.","enum":["UNKNOWN","VERY_UNLIKELY","UNLIKELY","POSSIBLE","LIKELY","VERY_LIKELY"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"sorrowLikelihood":{"name":"sorrowLikelihood","displayName":"sorrowLikelihood","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Sorrow likelihood.","enum":["UNKNOWN","VERY_UNLIKELY","UNLIKELY","POSSIBLE","LIKELY","VERY_LIKELY"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"panAngle":{"name":"panAngle","displayName":"panAngle","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"Yaw angle. Indicates the leftward/rightward angle that the face is\npointing, relative to the vertical plane perpendicular to the image. Range\n[-180,180].","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"fdBoundingPoly":{"name":"fdBoundingPoly","displayName":"fdBoundingPoly","typePropertyKind":"TYPE_EXPRESSION","type":["BoundingPoly"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"landmarks":{"name":"landmarks","displayName":"landmarks","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"Detected face landmarks.","items":["Landmark"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"detectionConfidence":{"name":"detectionConfidence","displayName":"detectionConfidence","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"Detection confidence. Range [0, 1].","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"blurredLikelihood":{"name":"blurredLikelihood","displayName":"blurredLikelihood","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Blurred likelihood.","enum":["UNKNOWN","VERY_UNLIKELY","UNLIKELY","POSSIBLE","LIKELY","VERY_LIKELY"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"tiltAngle":{"name":"tiltAngle","displayName":"tiltAngle","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"Pitch angle. Indicates the upwards/downwards angle that the face is\npointing\nrelative to the image's horizontal plane. Range [-180,180].","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"joyLikelihood":{"name":"joyLikelihood","displayName":"joyLikelihood","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Joy likelihood.","enum":["UNKNOWN","VERY_UNLIKELY","UNLIKELY","POSSIBLE","LIKELY","VERY_LIKELY"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"underExposedLikelihood":{"name":"underExposedLikelihood","displayName":"underExposedLikelihood","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Under-exposed likelihood.","enum":["UNKNOWN","VERY_UNLIKELY","UNLIKELY","POSSIBLE","LIKELY","VERY_LIKELY"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"landmarkingConfidence":{"name":"landmarkingConfidence","displayName":"landmarkingConfidence","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"Face landmarking confidence. Range [0, 1].","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"rollAngle":{"name":"rollAngle","displayName":"rollAngle","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"Roll angle. Indicates the amount of clockwise/anti-clockwise rotation of\nthe\nface relative to the image vertical, about the axis perpendicular to the\nface. Range [-180,180].","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"angerLikelihood":{"name":"angerLikelihood","displayName":"angerLikelihood","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Anger likelihood.","enum":["UNKNOWN","VERY_UNLIKELY","UNLIKELY","POSSIBLE","LIKELY","VERY_LIKELY"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"boundingPoly":{"name":"boundingPoly","displayName":"boundingPoly","typePropertyKind":"TYPE_EXPRESSION","type":["BoundingPoly"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Feature":{"name":"Feature","displayName":"Feature","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"The <em>Feature</em> indicates what type of image detection task to perform.\nUsers describe the type of Google Cloud Vision API tasks to perform over\nimages by using <em>Feature</em>s. Features encode the Cloud Vision API\nvertical to operate on and the number of top-scoring results to return.","properties":{"maxResults":{"name":"maxResults","displayName":"maxResults","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"Maximum number of results of this type.","format":"int32","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"type":{"name":"type","displayName":"type","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The feature type.","enum":["TYPE_UNSPECIFIED","FACE_DETECTION","LANDMARK_DETECTION","LOGO_DETECTION","LABEL_DETECTION","TEXT_DETECTION","SAFE_SEARCH_DETECTION","IMAGE_PROPERTIES"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Image":{"name":"Image","displayName":"Image","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Client image to perform Google Cloud Vision API tasks over.","properties":{"source":{"name":"source","displayName":"source","typePropertyKind":"TYPE_EXPRESSION","type":["ImageSource"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"content":{"name":"content","displayName":"content","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Image content, represented as a stream of bytes.\nNote: as with all `bytes` fields, protobuffers use a pure binary\nrepresentation, whereas JSON representations use base64.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"ImageContext":{"name":"ImageContext","displayName":"ImageContext","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Image context.","properties":{"languageHints":{"name":"languageHints","displayName":"languageHints","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"List of languages to use for TEXT_DETECTION. In most cases, an empty value\nyields the best results since it enables automatic language detection. For\nlanguages based on the Latin alphabet, setting `language_hints` is not\nneeded. In rare cases, when the language of the text in the image is known,\nsetting a hint will help get better results (although it will be a\nsignificant hindrance if the hint is wrong). Text detection returns an\nerror if one or more of the specified languages is not one of the\n[supported\nlanguages](/translate/v2/translate-reference#supported_languages).","items":{"name":"items","displayName":"items","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"latLongRect":{"name":"latLongRect","displayName":"latLongRect","typePropertyKind":"TYPE_EXPRESSION","type":["LatLongRect"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"ImageProperties":{"name":"ImageProperties","displayName":"ImageProperties","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Stores image properties (e.g. dominant colors).","properties":{"dominantColors":{"name":"dominantColors","displayName":"dominantColors","typePropertyKind":"TYPE_EXPRESSION","type":["DominantColorsAnnotation"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"ImageSource":{"name":"ImageSource","displayName":"ImageSource","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"External image source (Google Cloud Storage image location).","properties":{"gcsImageUri":{"name":"gcsImageUri","displayName":"gcsImageUri","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Google Cloud Storage image URI. It must be in the following form:\n`gs://bucket_name/object_name`. For more\ndetails, please see: https://cloud.google.com/storage/docs/reference-uris.\nNOTE: Cloud Storage object versioning is not supported!","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Landmark":{"name":"Landmark","displayName":"Landmark","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"A face-specific landmark (for example, a face feature).\nLandmark positions may fall outside the bounds of the image\nwhen the face is near one or more edges of the image.\nTherefore it is NOT guaranteed that 0 <= x < width or 0 <= y < height.","properties":{"position":{"name":"position","displayName":"position","typePropertyKind":"TYPE_EXPRESSION","type":["Position"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"type":{"name":"type","displayName":"type","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Face landmark type.","enum":["UNKNOWN_LANDMARK","LEFT_EYE","RIGHT_EYE","LEFT_OF_LEFT_EYEBROW","RIGHT_OF_LEFT_EYEBROW","LEFT_OF_RIGHT_EYEBROW","RIGHT_OF_RIGHT_EYEBROW","MIDPOINT_BETWEEN_EYES","NOSE_TIP","UPPER_LIP","LOWER_LIP","MOUTH_LEFT","MOUTH_RIGHT","MOUTH_CENTER","NOSE_BOTTOM_RIGHT","NOSE_BOTTOM_LEFT","NOSE_BOTTOM_CENTER","LEFT_EYE_TOP_BOUNDARY","LEFT_EYE_RIGHT_CORNER","LEFT_EYE_BOTTOM_BOUNDARY","LEFT_EYE_LEFT_CORNER","RIGHT_EYE_TOP_BOUNDARY","RIGHT_EYE_RIGHT_CORNER","RIGHT_EYE_BOTTOM_BOUNDARY","RIGHT_EYE_LEFT_CORNER","LEFT_EYEBROW_UPPER_MIDPOINT","RIGHT_EYEBROW_UPPER_MIDPOINT","LEFT_EAR_TRAGION","RIGHT_EAR_TRAGION","LEFT_EYE_PUPIL","RIGHT_EYE_PUPIL","FOREHEAD_GLABELLA","CHIN_GNATHION","CHIN_LEFT_GONION","CHIN_RIGHT_GONION"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"LatLng":{"name":"LatLng","displayName":"LatLng","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"An object representing a latitude/longitude pair. This is expressed as a pair\nof doubles representing degrees latitude and degrees longitude. Unless\nspecified otherwise, this must conform to the\n<a href=\"http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf\">WGS84\nstandard</a>. Values must be within normalized ranges.\n\nExample of normalization code in Python:\n\n    def NormalizeLongitude(longitude):\n      \"\"\"Wraps decimal degrees longitude to [-180.0, 180.0].\"\"\"\n      q, r = divmod(longitude, 360.0)\n      if r > 180.0 or (r == 180.0 and q <= -1.0):\n        return r - 360.0\n      return r\n\n    def NormalizeLatLng(latitude, longitude):\n      \"\"\"Wraps decimal degrees latitude and longitude to\n      [-90.0, 90.0] and [-180.0, 180.0], respectively.\"\"\"\n      r = latitude % 360.0\n      if r <= 90.0:\n        return r, NormalizeLongitude(longitude)\n      elif r >= 270.0:\n        return r - 360, NormalizeLongitude(longitude)\n      else:\n        return 180 - r, NormalizeLongitude(longitude + 180.0)\n\n    assert 180.0 == NormalizeLongitude(180.0)\n    assert -180.0 == NormalizeLongitude(-180.0)\n    assert -179.0 == NormalizeLongitude(181.0)\n    assert (0.0, 0.0) == NormalizeLatLng(360.0, 0.0)\n    assert (0.0, 0.0) == NormalizeLatLng(-360.0, 0.0)\n    assert (85.0, 180.0) == NormalizeLatLng(95.0, 0.0)\n    assert (-85.0, -170.0) == NormalizeLatLng(-95.0, 10.0)\n    assert (90.0, 10.0) == NormalizeLatLng(90.0, 10.0)\n    assert (-90.0, -10.0) == NormalizeLatLng(-90.0, -10.0)\n    assert (0.0, -170.0) == NormalizeLatLng(-180.0, 10.0)\n    assert (0.0, -170.0) == NormalizeLatLng(180.0, 10.0)\n    assert (-90.0, 10.0) == NormalizeLatLng(270.0, 10.0)\n    assert (90.0, 10.0) == NormalizeLatLng(-270.0, 10.0)","properties":{"latitude":{"name":"latitude","displayName":"latitude","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"The latitude in degrees. It must be in the range [-90.0, +90.0].","format":"double","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"longitude":{"name":"longitude","displayName":"longitude","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"The longitude in degrees. It must be in the range [-180.0, +180.0].","format":"double","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"LatLongRect":{"name":"LatLongRect","displayName":"LatLongRect","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Rectangle determined by min and max LatLng pairs.","properties":{"minLatLng":{"name":"minLatLng","displayName":"minLatLng","typePropertyKind":"TYPE_EXPRESSION","type":["LatLng"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"maxLatLng":{"name":"maxLatLng","displayName":"maxLatLng","typePropertyKind":"TYPE_EXPRESSION","type":["LatLng"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"LocationInfo":{"name":"LocationInfo","displayName":"LocationInfo","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Detected entity location information.","properties":{"latLng":{"name":"latLng","displayName":"latLng","typePropertyKind":"TYPE_EXPRESSION","type":["LatLng"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Position":{"name":"Position","displayName":"Position","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"A 3D position in the image, used primarily for Face detection landmarks.\nA valid Position must have both x and y coordinates.\nThe position coordinates are in the same scale as the original image.","properties":{"x":{"name":"x","displayName":"x","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"X coordinate.","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"y":{"name":"y","displayName":"y","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"Y coordinate.","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"z":{"name":"z","displayName":"z","typePropertyKind":"TYPE_EXPRESSION","type":["number"],"required":false,"description":"Z coordinate (or depth).","format":"float","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Property":{"name":"Property","displayName":"Property","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Arbitrary name/value pair.","properties":{"name":{"name":"name","displayName":"name","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Name of the property.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"value":{"name":"value","displayName":"value","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Value of the property.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"SafeSearchAnnotation":{"name":"SafeSearchAnnotation","displayName":"SafeSearchAnnotation","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Set of features pertaining to the image, computed by various computer vision\nmethods over safe-search verticals (for example, adult, spoof, medical,\nviolence).","properties":{"spoof":{"name":"spoof","displayName":"spoof","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Spoof likelihood. The likelihood that an obvious modification\nwas made to the image's canonical version to make it appear\nfunny or offensive.","enum":["UNKNOWN","VERY_UNLIKELY","UNLIKELY","POSSIBLE","LIKELY","VERY_LIKELY"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"medical":{"name":"medical","displayName":"medical","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Likelihood this is a medical image.","enum":["UNKNOWN","VERY_UNLIKELY","UNLIKELY","POSSIBLE","LIKELY","VERY_LIKELY"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"adult":{"name":"adult","displayName":"adult","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Represents the adult contents likelihood for the image.","enum":["UNKNOWN","VERY_UNLIKELY","UNLIKELY","POSSIBLE","LIKELY","VERY_LIKELY"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"violence":{"name":"violence","displayName":"violence","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Violence likelihood.","enum":["UNKNOWN","VERY_UNLIKELY","UNLIKELY","POSSIBLE","LIKELY","VERY_LIKELY"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Status":{"name":"Status","displayName":"Status","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` which can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting purpose.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.","properties":{"code":{"name":"code","displayName":"code","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"The status code, which should be an enum value of google.rpc.Code.","format":"int32","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"details":{"name":"details","displayName":"details","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"A list of messages that carry the error details.  There will be a\ncommon set of message types for APIs to use.","items":{"name":"items","displayName":"items","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"message":{"name":"message","displayName":"message","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Vertex":{"name":"Vertex","displayName":"Vertex","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image.","properties":{"x":{"name":"x","displayName":"x","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"X coordinate.","format":"int32","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"y":{"name":"y","displayName":"y","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"Y coordinate.","format":"int32","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}}],"traits":[{"hasParameters":{"queryParameters":{"quotaUser":{"name":"quotaUser","displayName":"quotaUser","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"pp":{"name":"pp","displayName":"pp","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"default":true,"required":false,"description":"Pretty-print response.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"prettyPrint":{"name":"prettyPrint","displayName":"prettyPrint","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"default":true,"required":false,"description":"Returns response with indentations and line breaks.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"$.xgafv":{"annotations":{"commons.EnumDescriptions":{"structuredValue":["v1 error format","v2 error format"],"name":"commons.EnumDescriptions"}},"name":"$.xgafv","displayName":"$.xgafv","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"V1 error format.","enum":["1","2"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"upload_protocol":{"name":"upload_protocol","displayName":"upload_protocol","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Upload protocol for media (e.g. \"raw\", \"multipart\").","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"uploadType":{"name":"uploadType","displayName":"uploadType","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Legacy upload protocol for media (e.g. \"media\", \"multipart\").","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"callback":{"name":"callback","displayName":"callback","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"JSONP","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"fields":{"name":"fields","displayName":"fields","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Selector specifying which fields to include in a partial response.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"securedBy":["oath2"],"name":"hasParameters","__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true}}}}}],"securitySchemes":[{"oath2":{"annotations":{"commons.OathScopeDescriptions":{"structuredValue":["View and manage your data across Google Cloud Platform services"],"name":"commons.OathScopeDescriptions"}},"name":"oath2","type":"OAuth 2.0","description":"Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2","settings":{"accessTokenUri":"https://accounts.google.com/o/oauth2/v2/auth","authorizationUri":"https://accounts.google.com/o/oauth2/v2/auth","authorizationGrants":["authorization_code","implicit"],"scopes":["https://www.googleapis.com/auth/cloud-platform"]}}}],"title":"Google Cloud Vision API","version":"v1","baseUri":"https://vision.googleapis.com/","protocols":["HTTPS"],"securedBy":["oath2"],"resources":[{"securedBy":["oath2"],"relativeUri":"/v1","displayName":"/v1","resources":[{"methods":[{"annotations":{"commons.Id":{"structuredValue":"vision.images.annotate","name":"commons.Id"},"commons.LogicalStructure":{"structuredValue":["Images"],"name":"commons.LogicalStructure"}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["BatchAnnotateImagesResponse"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}}}},"body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["BatchAnnotateImagesRequest"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"protocols":["HTTPS"],"is":["hasParameters"],"securedBy":[{"oath2":{"scopes":["https://www.googleapis.com/auth/cloud-platform"]}}],"description":"Run image detection and annotation for a batch of images.","displayName":"Annotate","method":"post","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"securedBy":["oath2"],"relativeUri":"/images:annotate","displayName":"/images:annotate","__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true},"displayName":{"calculated":true}}},"relativeUriPathSegments":["images:annotate"],"absoluteUri":"https://vision.googleapis.com/v1/images:annotate"}],"__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true},"displayName":{"calculated":true}}},"relativeUriPathSegments":["v1"],"absoluteUri":"https://vision.googleapis.com/v1"}],"__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}