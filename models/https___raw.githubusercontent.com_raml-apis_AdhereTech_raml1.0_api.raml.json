{"uses":[{"key":"types","value":"types/types.raml"}],"securitySchemes":[{"auth":{"name":"auth","type":"Basic Authentication"}}],"title":"AdhereTech External API","description":"An API designed to expose AdhereTech server's data to clients and other services.","version":"v1","baseUri":"adheretech.com/api/{version}","baseUriParameters":{"version":{"name":"version","displayName":"version","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"enum":["v1"],"__METADATA__":{"calculated":true,"primitiveValuesMeta":{"displayName":{"calculated":true},"type":{"insertedAsDefault":true},"required":{"insertedAsDefault":true},"enum":{"calculated":true}}}}},"protocols":["HTTPS"],"resources":[{"methods":[{"queryParameters":{"isActive":{"name":"isActive","displayName":"isActive","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":true,"description":"Flag that indicates if bottle is active."},"remindersActive":{"name":"remindersActive","displayName":"remindersActive","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":true,"description":"Flag that indicates if reminders are active."},"onBottleLights":{"name":"onBottleLights","displayName":"onBottleLights","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":true,"description":"Flag that indicates if visual alarms are active."},"onBottleSounds":{"name":"onBottleSounds","displayName":"onBottleSounds","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":true,"description":"Flag that indicates if auditory alarms are active."},"feedbackActive":{"name":"feedbackActive","displayName":"feedbackActive","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":true,"description":"Flag that indicates if feedback requests are active."},"patientUid":{"name":"patientUid","displayName":"patientUid","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"The ID of the patient using this bottle."},"page":{"name":"page","displayName":"page","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end page number; required for pagination."},"itemsPerPage":{"name":"itemsPerPage","displayName":"itemsPerPage","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end items per page value; required for pagination."},"sort":{"name":"sort","displayName":"sort","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Attribute(s) and order(s) to sort by in the following example format - \"uid desc, timeoccurred asc\" etc. Attribute names are case-sensitive. Omit to sort by 'uid' ascending as default."}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"items":"types.Bottle"}},"description":"Query completed; results returned."},"400":{"code":"400","description":"Incomplete or invalid pagination or sort parameters."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a list of bottles filtered by status and/or patient(s).","displayName":"getBottlesByValues","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/bottles","displayName":"/bottles","resources":[{"methods":[{"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["types.Bottle"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"description":"Bottle found and returned"},"404":{"code":"404","description":"Bottle not found."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a bottle by its UID.","displayName":"getBottle","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"200":{"code":"200","description":"Bottle found and modified."},"404":{"code":"404","description":"Bottle not found."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Modify a bottle by its UID.","displayName":"updateBottle","method":"put","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"uriParameters":{"bottleUid":{"name":"bottleUid","displayName":"bottleUid","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Bottle UID"}},"relativeUri":"/{bottleUid}","displayName":"/{bottleUid}","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["{bottleUid}"],"absoluteUri":"adheretech.com/api/{version}/bottles/{bottleUid}"}],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["bottles"],"absoluteUri":"adheretech.com/api/{version}/bottles"},{"methods":[{"queryParameters":{"firstName":{"name":"firstName","displayName":"firstName","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Patient's first name."},"lastName":{"name":"lastName","displayName":"lastName","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Patient's last name."},"phoneNumber":{"name":"phoneNumber","displayName":"phoneNumber","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Patient's phone number."},"programName":{"name":"programName","displayName":"programName","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"A string to search within the program's name."},"contactMethod":{"name":"contactMethod","displayName":"contactMethod","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The contact method used to reach the patient (phone, sms or email)."},"emailAddress":{"name":"emailAddress","displayName":"emailAddress","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Patient's email address."},"page":{"name":"page","displayName":"page","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end page number; required for pagination."},"itemsPerPage":{"name":"itemsPerPage","displayName":"itemsPerPage","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end items per page value; required for pagination."},"sort":{"name":"sort","displayName":"sort","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Attribute(s) and order(s) to sort by in the following example format - \"uid desc, timeoccurred asc\" etc. Attribute names are case-sensitive. Omit to sort by 'uid' ascending as default."}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"items":"types.Patient"}},"description":"Query completed; results returned."},"400":{"code":"400","description":"Incomplete or invalid pagination or sort parameters."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a list of patients filtered by their values.","displayName":"getPatientsByValues","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"queryParameters":{"bottleUids,":{"name":"bottleUids,","displayName":"bottleUids,","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Comma separated list of bottleUids for this bottle. Removing from this list will remove it from the patient. Adding bottles must be done through Bottle endpoint"}},"responses":{"200":{"code":"200","description":"Patient created."},"404":{"code":"404","description":"Address not found."},"405":{"code":"405","description":"Validation error."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Add a new patient to the database.","displayName":"addPatient","method":"post","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/patients","displayName":"/patients","resources":[{"methods":[{"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"items":"types.Patient"}},"description":"Patient found and returned."},"404":{"code":"404","description":"Patient not found."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a patient by UID.","displayName":"getPatient","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"200":{"code":"200","description":"Patient found and modified."},"404":{"code":"404","description":"Patient not found."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Modify a Patient using a patient UID number.","displayName":"updatePatient","method":"put","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"404":{"code":"404","description":"Patient not found."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Delete a patient by UID.","displayName":"deletePatient","method":"delete","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"uriParameters":{"patientUid":{"name":"patientUid","displayName":"patientUid","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Patient UID"}},"relativeUri":"/{patientUid}","displayName":"/{patientUid}","resources":[{"methods":[{"queryParameters":{"endDate":{"name":"endDate","displayName":"endDate","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"effective endDate for disenrollment (default is now). Dates in future not allowed. (UTC)."},"notes":{"name":"notes","displayName":"notes","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"notes to include with disenrollment action"}},"responses":{"200":{"code":"200","description":"Patient found and disenrolled. All bottles and reminders disabled"},"400":{"code":"400","description":"Patient not found. Or patient already disenrolled. Or invalid parameter"}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Disenroll a patient by UID.","displayName":"disenrollPatient","method":"post","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/disenroll","displayName":"/disenroll","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["disenroll"],"absoluteUri":"adheretech.com/api/{version}/patients/{patientUid}/disenroll"},{"methods":[{"queryParameters":{"notes":{"name":"notes","displayName":"notes","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Notes to be included with reenrollment event"}},"responses":{"200":{"code":"200","description":"Patient found and reenrolled"},"404":{"code":"404","description":"Patient not found. Or patient already enrolled"}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Reenroll a patient.","displayName":"reenrollpatient","method":"post","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/reenroll","displayName":"/reenroll","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["reenroll"],"absoluteUri":"adheretech.com/api/{version}/patients/{patientUid}/reenroll"},{"methods":[{"queryParameters":{"page":{"name":"page","displayName":"page","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end page number; required for pagination."},"itemsPerPage":{"name":"itemsPerPage","displayName":"itemsPerPage","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end items per page value; required for pagination."},"sort":{"name":"sort","displayName":"sort","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Attribute(s) and order(s) to sort by in the following example format - \"uid desc, timeoccurred asc\" etc. Attribute names are case-sensitive. Omit to sort by 'timesent' descending as default."}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"items":"types.FeedbackRequest"}},"description":"Query completed; results returned."},"400":{"code":"400","description":"Incomplete or invalid pagination or sort parameters."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get all active (scheduled but unsent) feedback requests for a patient.","displayName":"getFeedbackRequests","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"200":{"code":"200","description":"Feedback request created."},"404":{"code":"404","description":"Patient not found."},"405":{"code":"405","description":"Validation error."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Add a new feedback request for a patient.","displayName":"addFeedbackRequest","method":"post","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"404":{"code":"404","description":"Patient not found."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Delete all active feedback requests for a patient.","displayName":"deleteFeedbackRequests","method":"delete","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/feedbackrequests","displayName":"/feedbackrequests","resources":[{"methods":[{"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["types.FeedbackRequest"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"description":"Feedback request found and returned"},"404":{"code":"404","description":"Feedback request not found."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a feedback request by its ID.","displayName":"getFeedbackRequest","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"200":{"code":"200","description":"Feedback request found and modified."},"404":{"code":"404","description":"Feedback request not found."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Modify a feedback request by its ID.","displayName":"updateFeedbackRequest","method":"put","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"404":{"code":"404","description":"Feedback request not found."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Delete a feedback request by ID.","displayName":"deleteFeedbackRequest","method":"delete","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"uriParameters":{"feedbackId":{"name":"feedbackId","displayName":"feedbackId","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Feedback request ID"}},"relativeUri":"/{feedbackId}","displayName":"/{feedbackId}","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["{feedbackId}"],"absoluteUri":"adheretech.com/api/{version}/patients/{patientUid}/feedbackrequests/{feedbackId}"}],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["feedbackrequests"],"absoluteUri":"adheretech.com/api/{version}/patients/{patientUid}/feedbackrequests"}],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["{patientUid}"],"absoluteUri":"adheretech.com/api/{version}/patients/{patientUid}"}],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["patients"],"absoluteUri":"adheretech.com/api/{version}/patients"},{"methods":[{"queryParameters":{"programName":{"name":"programName","displayName":"programName","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"A string to search within the program's name."},"programDescription":{"name":"programDescription","displayName":"programDescription","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"A string to search within an program's description."},"startDate":{"name":"startDate","displayName":"startDate","typePropertyKind":"TYPE_EXPRESSION","type":["datetime"],"required":true,"description":"The start date for the date range filter. It filters by only returning programs which were or should be active in the given date range.","format":"rfc2616"},"endDatetime":{"name":"endDatetime","displayName":"endDatetime","typePropertyKind":"TYPE_EXPRESSION","type":["datetime"],"required":true,"description":"The end date for the date range filter. It filters by only returning programs which were or should be active in the given date range.","format":"rfc2616"},"patientUids":{"name":"patientUids","displayName":"patientUids","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Filters programs so that the results include only programs with the given patients (semicolon separated list)."},"page":{"name":"page","displayName":"page","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end page number; required for pagination."},"itemsPerPage":{"name":"itemsPerPage","displayName":"itemsPerPage","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end items per page value; required for pagination."},"sort":{"name":"sort","displayName":"sort","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Attribute(s) and order(s) to sort by in the following example format - \"uid desc, timeoccurred asc\" etc. Attribute names are case-sensitive. Omit to sort by 'name' ascending as default."}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"items":"types.Program"}},"description":"Query completed; results returned."},"400":{"code":"400","description":"Incomplete or invalid pagination or sort parameters."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a list of programs filtered by their values.","displayName":"getPrograms","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"200":{"code":"200","description":"Program created."},"404":{"code":"404","description":"Address not found."},"405":{"code":"405","description":"Validation error."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Add a new program to the database.","displayName":"addProgram","method":"post","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/programs","displayName":"/programs","resources":[{"methods":[{"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["types.Program"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"description":"Program found and returned."},"404":{"code":"404","description":"Program not found."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a program by programName.","displayName":"getProgram","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"200":{"code":"200","description":"Program found and modified."},"404":{"code":"404","description":"Program not found."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Modify a program by programName.","displayName":"updateProgram","method":"put","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"404":{"code":"404","description":"Program not found."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Delete a program by programName.","displayName":"deleteProgram","method":"delete","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"uriParameters":{"programName":{"name":"programName","displayName":"programName","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Program name."}},"relativeUri":"/{programName}","displayName":"/{programName}","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["{programName}"],"absoluteUri":"adheretech.com/api/{version}/programs/{programName}"}],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["programs"],"absoluteUri":"adheretech.com/api/{version}/programs"},{"methods":[{"queryParameters":{"username":{"name":"username","displayName":"username","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Login username."},"emailAddress":{"name":"emailAddress","displayName":"emailAddress","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"User's email address."},"role":{"name":"role","displayName":"role","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"User's permission roles as a comma separated String."},"page":{"name":"page","displayName":"page","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end page number; required for pagination."},"itemsPerPage":{"name":"itemsPerPage","displayName":"itemsPerPage","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end items per page value; required for pagination."},"sort":{"name":"sort","displayName":"sort","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Attribute(s) and order(s) to sort by in the following example format - \"uid desc, timeoccurred asc\" etc. Attribute names are case-sensitive. Omit to sort by 'username' ascending as default."}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"items":"types.User"}},"description":"Query completed; results returned."},"400":{"code":"400","description":"Incomplete or invalid pagination or sort parameters."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a list of users filtered by their values.","displayName":"getUsersByValues","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"200":{"code":"200","description":"User created."},"405":{"code":"405","description":"Validation error."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Add a new user to the database.","displayName":"addUser","method":"post","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/users","displayName":"/users","resources":[{"methods":[{"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["types.User"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"description":"User found and returned."},"404":{"code":"404","description":"User not found."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a user by username.","displayName":"getUser","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"200":{"code":"200","description":"User found and modified."},"404":{"code":"404","description":"User not found."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Modify a user using its username.","displayName":"updateUser","method":"put","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"404":{"code":"404","description":"User not found."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Delete a user by username.","displayName":"deleteUser","method":"delete","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"uriParameters":{"username":{"name":"username","displayName":"username","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"username"}},"relativeUri":"/{username}","displayName":"/{username}","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["{username}"],"absoluteUri":"adheretech.com/api/{version}/users/{username}"}],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["users"],"absoluteUri":"adheretech.com/api/{version}/users"},{"methods":[{"queryParameters":{"bottleReadingId":{"name":"bottleReadingId","displayName":"bottleReadingId","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"The ID of the bottle reading."},"bottleUid":{"name":"bottleUid","displayName":"bottleUid","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The bottle UID."},"checkinType":{"name":"checkinType","displayName":"checkinType","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The type of check-in for this reading."},"startDatetime":{"name":"startDatetime","displayName":"startDatetime","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The start date for the date range filter. It filters by receivedDateTime."},"endDatetime":{"name":"endDatetime","displayName":"endDatetime","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The end date for the date range filter. It filters by receivedDateTime."},"batteryLevel":{"name":"batteryLevel","displayName":"batteryLevel","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"The numerical representation of the battery level."},"batteryStatus":{"name":"batteryStatus","displayName":"batteryStatus","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The text representation of the battery status."},"cellServiceLevel":{"name":"cellServiceLevel","displayName":"cellServiceLevel","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"The numerical representation of the cell signal level."},"cellServiceStatus":{"name":"cellServiceStatus","displayName":"cellServiceStatus","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The text representation of the cell signal status."},"page":{"name":"page","displayName":"page","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end page number; required for pagination."},"itemsPerPage":{"name":"itemsPerPage","displayName":"itemsPerPage","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end items per page value; required for pagination."},"sort":{"name":"sort","displayName":"sort","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Attribute(s) and order(s) to sort by in the following example format - \"uid desc, timeoccurred asc\" etc. Attribute names are case-sensitive. Omit to sort by 'timereceived' descending as default."}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"items":"types.BottleReading"}},"description":"Query completed; results returned."},"400":{"code":"400","description":"Incomplete or invalid pagination or sort parameters."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a list of bottle readings filtered by status, bottle or date.","displayName":"getBottleReadingsByValues","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/bottlereadings","displayName":"/bottlereadings","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["bottlereadings"],"absoluteUri":"adheretech.com/api/{version}/bottlereadings"},{"methods":[{"queryParameters":{"patientUid":{"name":"patientUid","displayName":"patientUid","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The UID of the patient."},"bottleUid":{"name":"bottleUid","displayName":"bottleUid","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The UID of the bottle."},"bottleReadingId":{"name":"bottleReadingId","displayName":"bottleReadingId","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The ID of the bottle reading."},"reminderSent":{"name":"reminderSent","displayName":"reminderSent","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":true,"description":"If a reminder was sent for this dose."},"doseStatus":{"name":"doseStatus","displayName":"doseStatus","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The status of the dose (missed, early, ontime)."},"deadline":{"name":"deadline","displayName":"deadline","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The deadline of the dose."},"startDatetime":{"name":"startDatetime","displayName":"startDatetime","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Start date for the date range filter."},"endDatetime":{"name":"endDatetime","displayName":"endDatetime","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"End date for the date range filter."},"page":{"name":"page","displayName":"page","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end page number; required for pagination."},"itemsPerPage":{"name":"itemsPerPage","displayName":"itemsPerPage","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end items per page value; required for pagination."},"sort":{"name":"sort","displayName":"sort","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Attribute(s) and order(s) to sort by in the following example format - \"uid desc, timeoccurred asc\" etc. Attribute names are case-sensitive. Omit to sort by 'timerecorded' descending as default."}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"items":"types.Dose"}},"description":"Query completed; results returned."},"400":{"code":"400","description":"Incomplete or invalid pagination or sort parameters."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a list of doses filtered by status, bottle, patient or date.","displayName":"getDosesByValues","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/doses","displayName":"/doses","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["doses"],"absoluteUri":"adheretech.com/api/{version}/doses"},{"methods":[{"queryParameters":{"patientUid":{"name":"patientUid","displayName":"patientUid","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Patient UID."},"bottleUid":{"name":"bottleUid","displayName":"bottleUid","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Bottle UID for filtering."},"eventType":{"name":"eventType","displayName":"eventType","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The type of event to select."},"bottleReadingId":{"name":"bottleReadingId","displayName":"bottleReadingId","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Bottle Reading ID for filtering."},"startDatetime":{"name":"startDatetime","displayName":"startDatetime","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The start date for the date range filter. It filters by timeOccurred."},"endDatetime":{"name":"endDatetime","displayName":"endDatetime","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The end date for the date range filter. It filters by timeOccurred."},"page":{"name":"page","displayName":"page","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end page number; required for pagination."},"itemsPerPage":{"name":"itemsPerPage","displayName":"itemsPerPage","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end items per page value; required for pagination."},"sort":{"name":"sort","displayName":"sort","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Attribute(s) and order(s) to sort by in the following example format - \"uid desc, timeoccurred asc\" etc. Attribute names are case-sensitive. Omit to sort by 'timeoccurred' descending as default."}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"items":"types.Event"}},"description":"Query completed; results returned."},"400":{"code":"400","description":"Incomplete or invalid pagination or sort parameters."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a list of events.","displayName":"getEvents","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/events","displayName":"/events","resources":[{"methods":[{"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"items":"types.EventSubscription"}},"description":"Subscriptions returned."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get every subscription.","displayName":"getSubscriptions","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"200":{"code":"200","description":"Subscription created."},"405":{"code":"405","description":"Validation error."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Add a new event subscription.","displayName":"addSubscription","method":"post","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/subscriptions","displayName":"/subscriptions","resources":[{"methods":[{"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["types.EventSubscription"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"description":"Subscription found and returned."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a subscription by ID.","displayName":"getSubscription","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"protocols":["HTTP"],"securedBy":["auth"],"description":"Delete a subscription by ID.","displayName":"deleteSubscription","method":"delete","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"uriParameters":{"subscriptionId":{"name":"subscriptionId","displayName":"subscriptionId","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Subscription ID"}},"relativeUri":"/{subscriptionId}","displayName":"/{subscriptionId}","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["{subscriptionId}"],"absoluteUri":"adheretech.com/api/{version}/events/subscriptions/{subscriptionId}"}],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["subscriptions"],"absoluteUri":"adheretech.com/api/{version}/events/subscriptions"}],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["events"],"absoluteUri":"adheretech.com/api/{version}/events"},{"methods":[{"responses":{"200":{"code":"200","description":"Query completed; results returned."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get the available types of server events.","displayName":"getEventTypes","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/eventtypes","displayName":"/eventtypes","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["eventtypes"],"absoluteUri":"adheretech.com/api/{version}/eventtypes"},{"methods":[{"queryParameters":{"patientUid":{"name":"patientUid","displayName":"patientUid","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Patient UID."},"bottleUid":{"name":"bottleUid","displayName":"bottleUid","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Bottle UID for filtering."},"alertType":{"name":"alertType","displayName":"alertType","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The type of alert to select."},"bottleReadingId":{"name":"bottleReadingId","displayName":"bottleReadingId","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Bottle Reading ID for filtering."},"state":{"name":"state","displayName":"state","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"State for filtering."},"priority":{"name":"priority","displayName":"priority","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"minimum priority for filtering. The request will return every alert with a priority higher than this number."},"startDatetime":{"name":"startDatetime","displayName":"startDatetime","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The start date for the date range filter. It filters by timeOccurred."},"endDatetime":{"name":"endDatetime","displayName":"endDatetime","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The end date for the date range filter. It filters by timeOccurred."},"page":{"name":"page","displayName":"page","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end page number; required for pagination."},"itemsPerPage":{"name":"itemsPerPage","displayName":"itemsPerPage","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end items per page value; required for pagination."},"sort":{"name":"sort","displayName":"sort","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Attribute(s) and order(s) to sort by in the following example format - \"uid desc, timeoccurred asc\" etc. Attribute names are case-sensitive. Omit to sort by 'timeoccurred' descending as default."}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"items":"types.Alert"}},"description":"Query completed; results returned."},"400":{"code":"400","description":"Incomplete or invalid pagination or sort parameters."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a list of alerts.","displayName":"getAlerts","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/alerts","displayName":"/alerts","resources":[{"methods":[{"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["types.Alert"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"description":"Query completed; results returned."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a specific alert.","displayName":"getAlert","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"200":{"code":"200","description":"Alert found and modified."},"404":{"code":"404","description":"Alert not found."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Modify an alert record.","displayName":"updateAlert","method":"put","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"uriParameters":{"alertId":{"name":"alertId","displayName":"alertId","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Alert ID."}},"relativeUri":"/{alertId}","displayName":"/{alertId}","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["{alertId}"],"absoluteUri":"adheretech.com/api/{version}/alerts/{alertId}"}],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["alerts"],"absoluteUri":"adheretech.com/api/{version}/alerts"},{"methods":[{"responses":{"200":{"code":"200","description":"Query completed; results returned."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get the available types of server alerts.","displayName":"getAlertTypes","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/alerttypes","displayName":"/alerttypes","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["alerttypes"],"absoluteUri":"adheretech.com/api/{version}/alerttypes"},{"methods":[{"queryParameters":{"q":{"name":"q","displayName":"q","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The search query."}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"items":"types.SearchResult"}},"description":"Query completed; results returned."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get search results for a query.","displayName":"getSearch","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/search","displayName":"/search","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["search"],"absoluteUri":"adheretech.com/api/{version}/search"},{"methods":[{"queryParameters":{"patientUid":{"name":"patientUid","displayName":"patientUid","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Patient UID."},"status":{"name":"status","displayName":"status","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Pause status for filtering."},"startdateBefore":{"name":"startdateBefore","displayName":"startdateBefore","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The maximum start date for the date range filter."},"startdateAfter":{"name":"startdateAfter","displayName":"startdateAfter","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The minimum start date for the date range filter."},"enddateBefore":{"name":"enddateBefore","displayName":"enddateBefore","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The maximum end date for the date range filter."},"enddateAfter":{"name":"enddateAfter","displayName":"enddateAfter","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The minimum end date for the date range filter."},"page":{"name":"page","displayName":"page","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end page number; required for pagination."},"itemsPerPage":{"name":"itemsPerPage","displayName":"itemsPerPage","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Current front-end items per page value; required for pagination."},"sort":{"name":"sort","displayName":"sort","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Attribute(s) and order(s) to sort by in the following example format - \"uid desc, timeoccurred asc\" etc. Attribute names are case-sensitive. Omit to sort by 'startdate' descending as default."}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"items":"types.Pause"}},"description":"Query completed; results returned."},"400":{"code":"400","description":"Incomplete or invalid pagination or sort parameters."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a list of pauses.","displayName":"getPauses","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["types.Pause"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"description":"Pause created."},"400":{"code":"400","description":"Patient not found or invalid parameters."},"405":{"code":"405","description":"Validation error."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Add a new pause for a patient to the database.","displayName":"addPause","method":"post","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/pauses","displayName":"/pauses","resources":[{"methods":[{"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["types.Pause"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"description":"Query completed; results returned."},"404":{"code":"404","description":"Pause not found."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Get a specific pause.","displayName":"getPause","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"queryParameters":{"endnow":{"name":"endnow","displayName":"endnow","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":true,"description":"Set true to end an active pause."}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["types.Pause"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"description":"Pause found and updated."},"400":{"code":"400","description":"Invalid parameters / arguments."},"404":{"code":"404","description":"Pause not found."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Update a pause by id.","displayName":"updatePause","method":"put","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["types.Pause"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"description":"Pause found and deleted."},"400":{"code":"400","description":"Pause cannot be deleted."},"404":{"code":"404","description":"Pause not found."},"405":{"code":"405","description":"Validation exception."}},"protocols":["HTTP"],"securedBy":["auth"],"description":"Delete a future pause.","displayName":"deletePause","method":"delete","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"uriParameters":{"pauseId":{"name":"pauseId","displayName":"pauseId","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":true,"description":"Pause ID."}},"relativeUri":"/{pauseId}","displayName":"/{pauseId}","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["{pauseId}"],"absoluteUri":"adheretech.com/api/{version}/pauses/{pauseId}"}],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["pauses"],"absoluteUri":"adheretech.com/api/{version}/pauses"}],"documentation":[{"title":"AdhereTech External API","content":"An API designed to expose AdhereTech server's data to clients and other services."}]}