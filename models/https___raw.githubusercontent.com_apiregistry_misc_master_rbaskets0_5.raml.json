{"uses":[{"key":"commons","value":"https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml"},{"key":"extras","value":"https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml"}],"types":[{"Baskets":{"name":"Baskets","displayName":"Baskets","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"properties":{"count":{"name":"count","displayName":"count","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"Total number of baskets in the system; not present if query is applied","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"has_more":{"name":"has_more","displayName":"has_more","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":true,"description":"Indicates if there are more baskets to fetch","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"names":{"name":"names","displayName":"names","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":true,"description":"Collection of basket names","items":{"name":"items","displayName":"items","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Config":{"name":"Config","displayName":"Config","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"New configuration to apply","properties":{"capacity":{"name":"capacity","displayName":"capacity","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"Baskets capacity, defines maximum number of requests to store","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"expand_path":{"name":"expand_path","displayName":"expand_path","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":false,"description":"If set to `true` the forward URL path will be expanded when original HTTP request contains compound path.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"forward_url":{"name":"forward_url","displayName":"forward_url","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"URL to forward all incoming requests of the basket, `empty` value disables forwarding","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"insecure_tls":{"name":"insecure_tls","displayName":"insecure_tls","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":false,"description":"If set to `true` the certificate verification will be disabled if forward URL indicates HTTPS scheme.\n**Warning:** enabling this feature has known security implications.\n","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Headers":{"name":"Headers","displayName":"Headers","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Map of HTTP headers, key represents name, value is array of values","properties":{"//":{"name":"//","displayName":"//","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":true,"description":"Collection of header values","items":{"name":"items","displayName":"items","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Request":{"name":"Request","displayName":"Request","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"properties":{"body":{"name":"body","displayName":"body","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Content of request body","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"content_length":{"name":"content_length","displayName":"content_length","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"Content lenght of request","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"date":{"name":"date","displayName":"date","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"Date and time of request in Unix time ms. format (number of miliseconds elapsed since January 1, 1970 UTC)","format":"int64","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"headers":{"name":"headers","displayName":"headers","typePropertyKind":"TYPE_EXPRESSION","type":["Headers"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"method":{"name":"method","displayName":"method","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"HTTP methof of request","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"path":{"name":"path","displayName":"path","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"URL path of request","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"query":{"name":"query","displayName":"query","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Query parameters of request","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Requests":{"name":"Requests","displayName":"Requests","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"properties":{"count":{"name":"count","displayName":"count","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"Current number of collected requests hold by basket; not present if query is applied","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"has_more":{"name":"has_more","displayName":"has_more","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":true,"description":"Indicates if there are more requests collected by basket to fetch","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"requests":{"name":"requests","displayName":"requests","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":true,"description":"Collection of collected requests","items":{"name":"items","displayName":"items","typePropertyKind":"TYPE_EXPRESSION","type":["Request"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"total_count":{"name":"total_count","displayName":"total_count","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"Total number of all requests passed through this basket; not present if query is applied","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Response":{"name":"Response","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"HTTP response configuration","properties":{"body":{"name":"body","displayName":"body","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Content of response body","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"headers":{"name":"headers","displayName":"headers","typePropertyKind":"TYPE_EXPRESSION","type":["Headers"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"is_template":{"name":"is_template","displayName":"is_template","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":false,"description":"If set to `true` the body is treated as [HTML template](https://golang.org/pkg/html/template) that accepts\ninput from request parameters.\n","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"status":{"name":"status","displayName":"status","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"The HTTP status code to reply with","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Token":{"name":"Token","displayName":"Token","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"properties":{"token":{"name":"token","displayName":"token","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Secure token to manage the basket, generated by system","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}}],"securitySchemes":[{"basket_token":{"name":"basket_token","type":"Pass Through","describedBy":{"headers":{"Authorization":{"name":"Authorization","displayName":"Authorization","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}}}}}],"title":"Request Baskets","description":"RESTful API of Request Baskets service","version":"0.5","baseUri":"rbaskets.in/","protocols":["HTTP"],"mediaType":"application/json","resources":[{"methods":[{"queryParameters":{"max":{"name":"max","displayName":"max","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"Maximum number of basket names to return; default 20","__METADATA__":{"primitiveValuesMeta":{"required":{"insertedAsDefault":true}}}},"skip":{"name":"skip","displayName":"skip","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"Number of basket names to skip; default 0","__METADATA__":{"primitiveValuesMeta":{"required":{"insertedAsDefault":true}}}},"q":{"name":"q","displayName":"q","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Query string to filter result, only those basket names that match the query will be included in response","__METADATA__":{"primitiveValuesMeta":{"required":{"insertedAsDefault":true}}}}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["Baskets"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"description":"OK. Returns list of available baskets."},"204":{"code":"204","description":"No Content. No baskets available for specified limits"}},"protocols":["HTTP"],"description":"Fetches a list of basket names managed by service.","displayName":"Get baskets","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/baskets","displayName":"/baskets","resources":[{"methods":[{"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["Config"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"description":"OK. Returns basket configuration"},"401":{"code":"401","description":"Unauthorized. Invalid or missing basket token"},"404":{"code":"404","description":"Not Found. No basket with such name"}},"protocols":["HTTP"],"description":"Retrieves configuration settings of this basket.","displayName":"Get basket settings","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"204":{"code":"204","description":"No Content. Basket is deleted"},"401":{"code":"401","description":"Unauthorized. Invalid or missing basket token"},"404":{"code":"404","description":"Not Found. No basket with such name"}},"protocols":["HTTP"],"description":"Permanently deletes this basket and all collected requests.","displayName":"Delete basket","method":"delete","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"201":{"code":"201","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["Token"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"description":"Created. Indicates that basket is successfully created"},"400":{"code":"400","description":"Bad Request. Failed to parse JSON into basket configuration object."},"403":{"code":"403","description":"Forbidden. Indicates that basket name conflicts with reserved paths; e.g. `baskets`, `web`, etc."},"409":{"code":"409","description":"Conflict. Indicates that basket with such name already exists"},"422":{"code":"422","description":"Unprocessable Entity. Basket configuration is not valid."}},"body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["Config"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"protocols":["HTTP"],"description":"Creates a new basket with this name.","displayName":"Create new basket","method":"post","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"204":{"code":"204","description":"No Content. Basket configuration is updated"},"400":{"code":"400","description":"Bad Request. Failed to parse JSON into basket configuration object."},"401":{"code":"401","description":"Unauthorized. Invalid or missing basket token"},"404":{"code":"404","description":"Not Found. No basket with such name"},"422":{"code":"422","description":"Unprocessable Entity. Basket configuration is not valid."}},"body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["Config"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"protocols":["HTTP"],"description":"Updates configuration settings of this basket.\n\nSpecial configuration parameters for request forwarding:\n  * `insecure_tls` controls certificate verification when forwarding requests. Setting this parameter to `true`\n  allows to forward collected HTTP requests via HTTPS protocol even if the forward end-point is configured with\n  self-signed TLS/SSL certificate. **Warning:** enabling this feature has known security implications.\n  * `expand_path` changes the logic of constructing taget URL when forwarding requests. If this parameter is\n  set to `true` the forward URL path will be expanded when original HTTP request contains compound path. For\n  example, a basket with name **server1** is configured to forward all requests to `http://server1.intranet:8001/myservice`\n  and it has received an HTTP request like `GET http://baskets.example.com/server1/component/123/events?status=OK`\n  then depending on `expand_path` settings the request will be forwarded to:\n    * `true` => `GET http://server1.intranet:8001/myservice/component/123/events?status=OK`\n    * `false` => `GET http://server1.intranet:8001/myservice?status=OK`\n","displayName":"Update basket settings","method":"put","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"uriParameters":{"name":{"name":"name","displayName":"name","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The basket name","__METADATA__":{"primitiveValuesMeta":{"required":{"insertedAsDefault":true}}}}},"relativeUri":"/{name}","displayName":"/{name}","resources":[{"methods":[{"queryParameters":{"max":{"name":"max","displayName":"max","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"Maximum number of requests to return; default 20","__METADATA__":{"primitiveValuesMeta":{"required":{"insertedAsDefault":true}}}},"skip":{"name":"skip","displayName":"skip","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"Number of requests to skip; default 0","__METADATA__":{"primitiveValuesMeta":{"required":{"insertedAsDefault":true}}}},"q":{"name":"q","displayName":"q","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Query string to filter result, only requests that match the query will be included in response","__METADATA__":{"primitiveValuesMeta":{"required":{"insertedAsDefault":true}}}},"in":{"name":"in","displayName":"in","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Defines what is taken into account when filtering is applied: `body` - search in content body of collected requests,\n`query` - search among query parameters of collected requests, `headers` - search among request header values,\n`any` - search anywhere; default `any`\n","enum":["any","body","query","headers"],"__METADATA__":{"primitiveValuesMeta":{"required":{"insertedAsDefault":true}}}}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["Requests"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"description":"OK. Returns list of basket requests."},"204":{"code":"204","description":"No Content. No requests found for specified limits"},"401":{"code":"401","description":"Unauthorized. Invalid or missing basket token"},"404":{"code":"404","description":"Not Found. No basket with such name"}},"protocols":["HTTP"],"description":"Fetches collection of requests collected by this basket.","displayName":"Get collected requests","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"204":{"code":"204","description":"No Content. Basket requests are cleared"},"401":{"code":"401","description":"Unauthorized. Invalid or missing basket token"},"404":{"code":"404","description":"Not Found. No basket with such name"}},"protocols":["HTTP"],"description":"Deletes all requests collected by this basket.","displayName":"Delete all requests","method":"delete","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"relativeUri":"/requests","displayName":"/requests","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["requests"],"absoluteUri":"rbaskets.in/baskets/{name}/requests"},{"relativeUri":"/responses","displayName":"/responses","resources":[{"methods":[{"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["Response"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"description":"OK. Returns configured response information"},"401":{"code":"401","description":"Unauthorized. Invalid or missing basket token"},"404":{"code":"404","description":"Not Found. No basket with such name"}},"protocols":["HTTP"],"description":"Retrieves information about configured response of the basket. Service will reply with this response to any\nHTTP request sent to the basket with appropriate HTTP method.\n\nIf nothing is configured, the default response is HTTP 200 - OK with empty content.\n","displayName":"Get response settings","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"responses":{"204":{"code":"204","description":"No Content. Response configuration is updated"},"400":{"code":"400","description":"Bad Request. Failed to parse JSON into response configuration object."},"401":{"code":"401","description":"Unauthorized. Invalid or missing basket token"},"404":{"code":"404","description":"Not Found. No basket with such name"},"422":{"code":"422","description":"Unprocessable Entity. Response configuration is not valid."}},"body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["Response"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"protocols":["HTTP"],"description":"Allows to configure HTTP response of this basket. The service will reply with configured response to any HTTP\nrequest sent to the basket with appropriate HTTP method.\n\nIf nothing is configured, the default response is HTTP 200 - OK with empty content.\n","displayName":"Update response settings","method":"put","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"uriParameters":{"method":{"name":"method","displayName":"method","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"The HTTP method this response is configured for","enum":["GET","HEAD","POST","PUT","PATCH","DELETE","CONNECT","OPTIONS","TRACE"],"__METADATA__":{"primitiveValuesMeta":{"required":{"insertedAsDefault":true}}}}},"relativeUri":"/{method}","displayName":"/{method}","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["{method}"],"absoluteUri":"rbaskets.in/baskets/{name}/responses/{method}"}],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["responses"],"absoluteUri":"rbaskets.in/baskets/{name}/responses"}],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["{name}"],"absoluteUri":"rbaskets.in/baskets/{name}"}],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}},"relativeUriPathSegments":["baskets"],"absoluteUri":"rbaskets.in/baskets"}],"__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}