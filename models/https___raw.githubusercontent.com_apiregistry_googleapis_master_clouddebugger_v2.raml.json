{"annotations":{"commons.Id":{"structuredValue":"clouddebugger:v2","name":"commons.Id"},"commons.Links":{"structuredValue":[{"title":"Developer Documentation","url":"http://cloud.google.com/debugger","role":"documentation"}],"name":"commons.Links"},"commons.Icons":{"structuredValue":[{"url":"http://www.google.com/images/icons/product/search-32.gif","name":"x32"},{"url":"http://www.google.com/images/icons/product/search-16.gif","name":"x16"}],"name":"commons.Icons"}},"uses":[{"key":"commons","value":"https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml"},{"key":"extras","value":"https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml"}],"types":[{"AliasContext":{"name":"AliasContext","displayName":"AliasContext","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"An alias to a repo revision.","properties":{"kind":{"name":"kind","displayName":"kind","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The alias kind.","enum":["ANY","FIXED","MOVABLE","OTHER"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"name":{"name":"name","displayName":"name","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The alias name.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Breakpoint":{"name":"Breakpoint","displayName":"Breakpoint","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Represents the breakpoint specification, status and results.","properties":{"stackFrames":{"name":"stackFrames","displayName":"stackFrames","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"The stack at breakpoint time.","items":["StackFrame"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"evaluatedExpressions":{"name":"evaluatedExpressions","displayName":"evaluatedExpressions","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"Values of evaluated expressions at breakpoint time. The evaluated expressions appear in exactly the same order they are listed in the `expressions` field. The `name` field holds the original expression text, the `value` or `members` field holds the result of the evaluated expression. If the expression cannot be evaluated, the `status` inside the `Variable` will indicate an error and contain the error text.","items":["Variable"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"variableTable":{"name":"variableTable","displayName":"variableTable","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"The `variable_table` exists to aid with computation, memory and network traffic optimization. It enables storing a variable once and reference it from multiple variables, including variables stored in the `variable_table` itself. For example, the same `this` object, which may appear at many levels of the stack, can have all of its data stored once in this table. The stack frame variables then would hold only a reference to it. The variable `var_table_index` field is an index into this repeated field. The stored objects are nameless and get their name from the referencing variable. The effective variable is a merge of the referencing variable and the referenced variable.","items":["Variable"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"expressions":{"name":"expressions","displayName":"expressions","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"List of read-only expressions to evaluate at the breakpoint location. The expressions are composed using expressions in the programming language at the source location. If the breakpoint action is `LOG`, the evaluated expressions are included in log statements.","items":{"name":"items","displayName":"items","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"finalTime":{"name":"finalTime","displayName":"finalTime","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Time this breakpoint was finalized as seen by the server in seconds resolution.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"labels":{"name":"labels","displayName":"labels","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"required":false,"description":"A set of custom breakpoint properties, populated by the agent, to be displayed to the user.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"condition":{"name":"condition","displayName":"condition","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Condition that triggers the breakpoint. The condition is a compound boolean expression composed using expressions in a programming language at the source location.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"logLevel":{"name":"logLevel","displayName":"logLevel","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Indicates the severity of the log. Only relevant when action is `LOG`.","enum":["INFO","WARNING","ERROR"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"isFinalState":{"name":"isFinalState","displayName":"isFinalState","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":false,"description":"When true, indicates that this is a final result and the breakpoint state will not change from here on.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"createTime":{"name":"createTime","displayName":"createTime","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Time this breakpoint was created by the server in seconds resolution.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"action":{"name":"action","displayName":"action","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Action that the agent should perform when the code at the breakpoint location is hit.","enum":["CAPTURE","LOG"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"logMessageFormat":{"name":"logMessageFormat","displayName":"logMessageFormat","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Only relevant when action is `LOG`. Defines the message to log when the breakpoint hits. The message may include parameter placeholders `$0`, `$1`, etc. These placeholders are replaced with the evaluated value of the appropriate expression. Expressions not referenced in `log_message_format` are not logged. Example: `Message received, id = $0, count = $1` with `expressions` = `[ message.id, message.count ]`.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"location":{"name":"location","displayName":"location","typePropertyKind":"TYPE_EXPRESSION","type":["SourceLocation"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"userEmail":{"name":"userEmail","displayName":"userEmail","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"E-mail address of the user that created this breakpoint","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"id":{"name":"id","displayName":"id","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Breakpoint identifier, unique in the scope of the debuggee.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"status":{"name":"status","displayName":"status","typePropertyKind":"TYPE_EXPRESSION","type":["StatusMessage"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"CloudRepoSourceContext":{"name":"CloudRepoSourceContext","displayName":"CloudRepoSourceContext","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"A CloudRepoSourceContext denotes a particular revision in a cloud repo (a repo hosted by the Google Cloud Platform).","properties":{"revisionId":{"name":"revisionId","displayName":"revisionId","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"A revision ID.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"aliasContext":{"name":"aliasContext","displayName":"aliasContext","typePropertyKind":"TYPE_EXPRESSION","type":["AliasContext"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"repoId":{"name":"repoId","displayName":"repoId","typePropertyKind":"TYPE_EXPRESSION","type":["RepoId"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"aliasName":{"name":"aliasName","displayName":"aliasName","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The name of an alias (branch, tag, etc.).","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"CloudWorkspaceId":{"name":"CloudWorkspaceId","displayName":"CloudWorkspaceId","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"A CloudWorkspaceId is a unique identifier for a cloud workspace. A cloud workspace is a place associated with a repo where modified files can be stored before they are committed.","properties":{"repoId":{"name":"repoId","displayName":"repoId","typePropertyKind":"TYPE_EXPRESSION","type":["RepoId"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"name":{"name":"name","displayName":"name","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The unique name of the workspace within the repo. This is the name chosen by the client in the Source API's CreateWorkspace method.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"CloudWorkspaceSourceContext":{"name":"CloudWorkspaceSourceContext","displayName":"CloudWorkspaceSourceContext","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"A CloudWorkspaceSourceContext denotes a workspace at a particular snapshot.","properties":{"snapshotId":{"name":"snapshotId","displayName":"snapshotId","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The ID of the snapshot. An empty snapshot_id refers to the most recent snapshot.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"workspaceId":{"name":"workspaceId","displayName":"workspaceId","typePropertyKind":"TYPE_EXPRESSION","type":["CloudWorkspaceId"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Debuggee":{"name":"Debuggee","displayName":"Debuggee","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Represents the application to debug. The application may include one or more replicated processes executing the same code. Each of these processes is attached with a debugger agent, carrying out the debugging commands. The agents attached to the same debuggee are identified by using exactly the same field values when registering.","properties":{"extSourceContexts":{"name":"extSourceContexts","displayName":"extSourceContexts","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"References to the locations and revisions of the source code used in the deployed application. Contexts describing a remote repo related to the source code have a `category` label of `remote_repo`. Source snapshot source contexts have a `category` of `snapshot`.","items":["ExtendedSourceContext"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"isInactive":{"name":"isInactive","displayName":"isInactive","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":false,"description":"If set to `true`, indicates that the debuggee is considered as inactive by the Controller service.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"sourceContexts":{"name":"sourceContexts","displayName":"sourceContexts","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"References to the locations and revisions of the source code used in the deployed application. NOTE: This field is deprecated. Consumers should use `ext_source_contexts` if it is not empty. Debug agents should populate both this field and `ext_source_contexts`.","items":["SourceContext"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"uniquifier":{"name":"uniquifier","displayName":"uniquifier","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Debuggee uniquifier within the project. Any string that identifies the application within the project can be used. Including environment and version or build IDs is recommended.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"project":{"name":"project","displayName":"project","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Project the debuggee is associated with. Use the project number when registering a Google Cloud Platform project.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"description":{"name":"description","displayName":"description","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Human readable description of the debuggee. Including a human-readable project name, environment name and version information is recommended.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"agentVersion":{"name":"agentVersion","displayName":"agentVersion","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Version ID of the agent release. The version ID is structured as following: `domain/type/vmajor.minor` (for example `google.com/gcp-java/v1.1`).","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"id":{"name":"id","displayName":"id","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Unique identifier for the debuggee generated by the controller service.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"isDisabled":{"name":"isDisabled","displayName":"isDisabled","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":false,"description":"If set to `true`, indicates that the agent should disable itself and detach from the debuggee.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"status":{"name":"status","displayName":"status","typePropertyKind":"TYPE_EXPRESSION","type":["StatusMessage"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"labels":{"name":"labels","displayName":"labels","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"required":false,"description":"A set of custom debuggee properties, populated by the agent, to be displayed to the user.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Empty":{"name":"Empty","displayName":"Empty","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"ExtendedSourceContext":{"name":"ExtendedSourceContext","displayName":"ExtendedSourceContext","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"An ExtendedSourceContext is a SourceContext combined with additional details describing the context.","properties":{"context":{"name":"context","displayName":"context","typePropertyKind":"TYPE_EXPRESSION","type":["SourceContext"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"labels":{"name":"labels","displayName":"labels","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"required":false,"description":"Labels with user defined metadata.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"FormatMessage":{"name":"FormatMessage","displayName":"FormatMessage","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Represents a message with parameters.","properties":{"format":{"name":"format","displayName":"format","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Format template for the message. The `format` uses placeholders `$0`, `$1`, etc. to reference parameters. `$$` can be used to denote the `$` character. Examples: * `Failed to load '$0' which helps debug $1 the first time it is loaded. Again, $0 is very important.` * `Please pay $$10 to use $0 instead of $1.`","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"parameters":{"name":"parameters","displayName":"parameters","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"Optional parameters to be embedded into the message.","items":{"name":"items","displayName":"items","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"GerritSourceContext":{"name":"GerritSourceContext","displayName":"GerritSourceContext","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"A SourceContext referring to a Gerrit project.","properties":{"revisionId":{"name":"revisionId","displayName":"revisionId","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"A revision (commit) ID.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"aliasContext":{"name":"aliasContext","displayName":"aliasContext","typePropertyKind":"TYPE_EXPRESSION","type":["AliasContext"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"aliasName":{"name":"aliasName","displayName":"aliasName","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The name of an alias (branch, tag, etc.).","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"hostUri":{"name":"hostUri","displayName":"hostUri","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The URI of a running Gerrit instance.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"gerritProject":{"name":"gerritProject","displayName":"gerritProject","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is hostURI/project.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"GetBreakpointResponse":{"name":"GetBreakpointResponse","displayName":"GetBreakpointResponse","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Response for getting breakpoint information.","properties":{"breakpoint":{"name":"breakpoint","displayName":"breakpoint","typePropertyKind":"TYPE_EXPRESSION","type":["Breakpoint"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"GitSourceContext":{"name":"GitSourceContext","displayName":"GitSourceContext","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"A GitSourceContext denotes a particular revision in a third party Git repository (e.g. GitHub).","properties":{"revisionId":{"name":"revisionId","displayName":"revisionId","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Git commit hash. required.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"url":{"name":"url","displayName":"url","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Git repository URL.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"ListActiveBreakpointsResponse":{"name":"ListActiveBreakpointsResponse","displayName":"ListActiveBreakpointsResponse","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Response for listing active breakpoints.","properties":{"nextWaitToken":{"name":"nextWaitToken","displayName":"nextWaitToken","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"A wait token that can be used in the next method call to block until the list of breakpoints changes.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"breakpoints":{"name":"breakpoints","displayName":"breakpoints","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"List of all active breakpoints. The fields `id` and `location` are guaranteed to be set on each breakpoint.","items":["Breakpoint"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"waitExpired":{"name":"waitExpired","displayName":"waitExpired","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":false,"description":"The `wait_expired` field is set to true by the server when the request times out and the field `success_on_timeout` is set to true.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"ListBreakpointsResponse":{"name":"ListBreakpointsResponse","displayName":"ListBreakpointsResponse","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Response for listing breakpoints.","properties":{"nextWaitToken":{"name":"nextWaitToken","displayName":"nextWaitToken","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"A wait token that can be used in the next call to `list` (REST) or `ListBreakpoints` (RPC) to block until the list of breakpoints has changes.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"breakpoints":{"name":"breakpoints","displayName":"breakpoints","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"List of all breakpoints with complete state. The fields `id` and `location` are guaranteed to be set on each breakpoint.","items":["Breakpoint"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"ListDebuggeesResponse":{"name":"ListDebuggeesResponse","displayName":"ListDebuggeesResponse","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Response for listing debuggees.","properties":{"debuggees":{"name":"debuggees","displayName":"debuggees","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"List of debuggees accessible to the calling user. Note that the `description` field is the only human readable field that should be displayed to the user. The fields `debuggee.id` and `description` fields are guaranteed to be set on each debuggee.","items":["Debuggee"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"ProjectRepoId":{"name":"ProjectRepoId","displayName":"ProjectRepoId","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Selects a repo using a Google Cloud Platform project ID (e.g. winged-cargo-31) and a repo name within that project.","properties":{"repoName":{"name":"repoName","displayName":"repoName","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The name of the repo. Leave empty for the default repo.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"projectId":{"name":"projectId","displayName":"projectId","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The ID of the project.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"RegisterDebuggeeRequest":{"name":"RegisterDebuggeeRequest","displayName":"RegisterDebuggeeRequest","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Request to register a debuggee.","properties":{"debuggee":{"name":"debuggee","displayName":"debuggee","typePropertyKind":"TYPE_EXPRESSION","type":["Debuggee"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"RegisterDebuggeeResponse":{"name":"RegisterDebuggeeResponse","displayName":"RegisterDebuggeeResponse","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Response for registering a debuggee.","properties":{"debuggee":{"name":"debuggee","displayName":"debuggee","typePropertyKind":"TYPE_EXPRESSION","type":["Debuggee"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"RepoId":{"name":"RepoId","displayName":"RepoId","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"A unique identifier for a cloud repo.","properties":{"uid":{"name":"uid","displayName":"uid","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"A server-assigned, globally unique identifier.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"projectRepoId":{"name":"projectRepoId","displayName":"projectRepoId","typePropertyKind":"TYPE_EXPRESSION","type":["ProjectRepoId"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"SetBreakpointResponse":{"name":"SetBreakpointResponse","displayName":"SetBreakpointResponse","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Response for setting a breakpoint.","properties":{"breakpoint":{"name":"breakpoint","displayName":"breakpoint","typePropertyKind":"TYPE_EXPRESSION","type":["Breakpoint"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"SourceContext":{"name":"SourceContext","displayName":"SourceContext","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"A SourceContext is a reference to a tree of files. A SourceContext together with a path point to a unique revision of a single file or directory.","properties":{"cloudWorkspace":{"name":"cloudWorkspace","displayName":"cloudWorkspace","typePropertyKind":"TYPE_EXPRESSION","type":["CloudWorkspaceSourceContext"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"git":{"name":"git","displayName":"git","typePropertyKind":"TYPE_EXPRESSION","type":["GitSourceContext"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"gerrit":{"name":"gerrit","displayName":"gerrit","typePropertyKind":"TYPE_EXPRESSION","type":["GerritSourceContext"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"cloudRepo":{"name":"cloudRepo","displayName":"cloudRepo","typePropertyKind":"TYPE_EXPRESSION","type":["CloudRepoSourceContext"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"SourceLocation":{"name":"SourceLocation","displayName":"SourceLocation","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Represents a location in the source code.","properties":{"path":{"name":"path","displayName":"path","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Path to the source file within the source context of the target binary.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"line":{"name":"line","displayName":"line","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"Line inside the file. The first line in the file has the value `1`.","format":"int32","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"StackFrame":{"name":"StackFrame","displayName":"StackFrame","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Represents a stack frame context.","properties":{"function":{"name":"function","displayName":"function","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Demangled function name at the call site.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"location":{"name":"location","displayName":"location","typePropertyKind":"TYPE_EXPRESSION","type":["SourceLocation"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"arguments":{"name":"arguments","displayName":"arguments","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"Set of arguments passed to this function. Note that this might not be populated for all stack frames.","items":["Variable"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"locals":{"name":"locals","displayName":"locals","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"Set of local variables at the stack frame location. Note that this might not be populated for all stack frames.","items":["Variable"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"StatusMessage":{"name":"StatusMessage","displayName":"StatusMessage","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Represents a contextual status message. The message can indicate an error or informational status, and refer to specific parts of the containing object. For example, the `Breakpoint.status` field can indicate an error referring to the `BREAKPOINT_SOURCE_LOCATION` with the message `Location not found`.","properties":{"refersTo":{"name":"refersTo","displayName":"refersTo","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Reference to which the message applies.","enum":["UNSPECIFIED","BREAKPOINT_SOURCE_LOCATION","BREAKPOINT_CONDITION","BREAKPOINT_EXPRESSION","VARIABLE_NAME","VARIABLE_VALUE"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"isError":{"name":"isError","displayName":"isError","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":false,"description":"Distinguishes errors from informational messages.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"description":{"name":"description","displayName":"description","typePropertyKind":"TYPE_EXPRESSION","type":["FormatMessage"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"UpdateActiveBreakpointRequest":{"name":"UpdateActiveBreakpointRequest","displayName":"UpdateActiveBreakpointRequest","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Request to update an active breakpoint.","properties":{"breakpoint":{"name":"breakpoint","displayName":"breakpoint","typePropertyKind":"TYPE_EXPRESSION","type":["Breakpoint"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"UpdateActiveBreakpointResponse":{"name":"UpdateActiveBreakpointResponse","displayName":"UpdateActiveBreakpointResponse","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Response for updating an active breakpoint. The message is defined to allow future extensions.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},{"Variable":{"name":"Variable","displayName":"Variable","typePropertyKind":"TYPE_EXPRESSION","type":["object"],"description":"Represents a variable or an argument possibly of a compound object type. Note how the following variables are represented: 1) A simple variable: int x = 5 { name: \"x\", value: \"5\", type: \"int\" } // Captured variable 2) A compound object: struct T { int m1; int m2; }; T x = { 3, 7 }; { // Captured variable name: \"x\", type: \"T\", members { name: \"m1\", value: \"3\", type: \"int\" }, members { name: \"m2\", value: \"7\", type: \"int\" } } 3) A pointer where the pointee was captured: T x = { 3, 7 }; T* p = &x; { // Captured variable name: \"p\", type: \"T*\", value: \"0x00500500\", members { name: \"m1\", value: \"3\", type: \"int\" }, members { name: \"m2\", value: \"7\", type: \"int\" } } 4) A pointer where the pointee was not captured: T* p = new T; { // Captured variable name: \"p\", type: \"T*\", value: \"0x00400400\" status { is_error: true, description { format: \"unavailable\" } } } The status should describe the reason for the missing value, such as ``, ``, `\n`. Note that a null pointer should not have members. 5) An unnamed value: int* p = new int(7); { // Captured variable name: \"p\", value: \"0x00500500\", type: \"int*\", members { value: \"7\", type: \"int\" } } 6) An unnamed pointer where the pointee was not captured: int* p = new int(7); int** pp = &p; { // Captured variable name: \"pp\", value: \"0x00500500\", type: \"int**\", members { value: \"0x00400400\", type: \"int*\" status { is_error: true, description: { format: \"unavailable\" } } } } } To optimize computation, memory and network traffic, variables that repeat in the output multiple times can be stored once in a shared variable table and be referenced using the `var_table_index` field. The variables stored in the shared table are nameless and are essentially a partition of the complete variable. To reconstruct the complete variable, merge the referencing variable with the referenced variable. When using the shared variable table, the following variables: T x = { 3, 7 }; T* p = &x; T& r = x; { name: \"x\", var_table_index: 3, type: \"T\" } // Captured variables { name: \"p\", value \"0x00500500\", type=\"T*\", var_table_index: 3 } { name: \"r\", type=\"T&\", var_table_index: 3 } { // Shared variable table entry #3: members { name: \"m1\", value: \"3\", type: \"int\" }, members { name: \"m2\", value: \"7\", type: \"int\" } } Note that the pointer address is stored with the referencing variable and not with the referenced variable. This allows the referenced variable to be shared between pointers and references. The type field is optional. The debugger agent may or may not support it.","properties":{"varTableIndex":{"name":"varTableIndex","displayName":"varTableIndex","typePropertyKind":"TYPE_EXPRESSION","type":["integer"],"required":false,"description":"Reference to a variable in the shared variable table. More than one variable can reference the same variable in the table. The `var_table_index` field is an index into `variable_table` in Breakpoint.","format":"int32","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"members":{"name":"members","displayName":"members","typePropertyKind":"TYPE_EXPRESSION","type":["array"],"required":false,"description":"Members contained or pointed to by the variable.","items":["Variable"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"name":{"name":"name","displayName":"name","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Name of the variable, if any.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"type":{"name":"type","displayName":"type","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Variable type (e.g. `MyClass`). If the variable is split with `var_table_index`, `type` goes next to `value`. The interpretation of a type is agent specific. It is recommended to include the dynamic type rather than a static type of an object.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"value":{"name":"value","displayName":"value","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Simple value of the variable.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"status":{"name":"status","displayName":"status","typePropertyKind":"TYPE_EXPRESSION","type":["StatusMessage"],"required":false,"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}}],"traits":[{"hasParameters":{"queryParameters":{"pp":{"name":"pp","displayName":"pp","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"default":true,"required":false,"description":"Pretty-print response.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"quotaUser":{"name":"quotaUser","displayName":"quotaUser","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"prettyPrint":{"name":"prettyPrint","displayName":"prettyPrint","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"default":true,"required":false,"description":"Returns response with indentations and line breaks.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"upload_protocol":{"name":"upload_protocol","displayName":"upload_protocol","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Upload protocol for media (e.g. \"raw\", \"multipart\").","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"$.xgafv":{"annotations":{"commons.EnumDescriptions":{"structuredValue":["v1 error format","v2 error format"],"name":"commons.EnumDescriptions"}},"name":"$.xgafv","displayName":"$.xgafv","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"V1 error format.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"uploadType":{"name":"uploadType","displayName":"uploadType","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Legacy upload protocol for media (e.g. \"media\", \"multipart\").","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"callback":{"name":"callback","displayName":"callback","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"JSONP","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"fields":{"name":"fields","displayName":"fields","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Selector specifying which fields to include in a partial response.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"securedBy":["oath2"],"name":"hasParameters","__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true}}}}}],"securitySchemes":[{"oath2":{"annotations":{"commons.OathScopeDescriptions":{"structuredValue":["Manage cloud debugger","View and manage your data across Google Cloud Platform services"],"name":"commons.OathScopeDescriptions"}},"name":"oath2","type":"OAuth 2.0","description":"Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2","settings":{"accessTokenUri":"https://accounts.google.com/o/oauth2/v2/auth","authorizationUri":"https://accounts.google.com/o/oauth2/v2/auth","authorizationGrants":["authorization_code","implicit"],"scopes":["https://www.googleapis.com/auth/cloud_debugger","https://www.googleapis.com/auth/cloud-platform"]}}}],"title":"Stackdriver Debugger API","version":"v2","baseUri":"https://clouddebugger.googleapis.com/","protocols":["HTTPS"],"securedBy":["oath2"],"resources":[{"securedBy":["oath2"],"relativeUri":"/v2","displayName":"/v2","resources":[{"securedBy":["oath2"],"relativeUri":"/controller","displayName":"/controller","resources":[{"securedBy":["oath2"],"relativeUri":"/debuggees","displayName":"/debuggees","resources":[{"methods":[{"annotations":{"commons.Id":{"structuredValue":"clouddebugger.controller.debuggees.register","name":"commons.Id"},"commons.LogicalStructure":{"structuredValue":["Controller","Debuggees"],"name":"commons.LogicalStructure"}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["RegisterDebuggeeResponse"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}}}},"body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["RegisterDebuggeeRequest"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"protocols":["HTTPS"],"is":["hasParameters"],"securedBy":[{"oath2":{"scopes":["https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloud_debugger"]}}],"description":"Registers the debuggee with the controller service. All agents attached to the same application should call this method with the same request content to get back the same stable `debuggee_id`. Agents should call this method again whenever `google.rpc.Code.NOT_FOUND` is returned from any controller method. This allows the controller service to disable the agent or recover from any data loss. If the debuggee is disabled by the server, the response will have `is_disabled` set to `true`.","displayName":"Register","method":"post","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"securedBy":["oath2"],"relativeUri":"/register","displayName":"/register","__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true},"displayName":{"calculated":true}}},"relativeUriPathSegments":["register"],"absoluteUri":"https://clouddebugger.googleapis.com/v2/controller/debuggees/register"},{"securedBy":["oath2"],"uriParameters":{"debuggeeId":{"name":"debuggeeId","displayName":"debuggeeId","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Identifies the debuggee being debugged.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"relativeUri":"/{debuggeeId}","displayName":"/{debuggeeId}","resources":[{"methods":[{"annotations":{"commons.Id":{"structuredValue":"clouddebugger.controller.debuggees.breakpoints.list","name":"commons.Id"},"commons.LogicalStructure":{"structuredValue":["Controller","Debuggees","Breakpoints"],"name":"commons.LogicalStructure"}},"queryParameters":{"waitToken":{"name":"waitToken","displayName":"waitToken","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"A wait token that, if specified, blocks the method call until the list of active breakpoints has changed, or a server selected timeout has expired. The value should be set from the last returned response.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"successOnTimeout":{"name":"successOnTimeout","displayName":"successOnTimeout","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":false,"description":"If set to `true`, returns `google.rpc.Code.OK` status and sets the `wait_expired` response field to `true` when the server-selected timeout has expired (recommended). If set to `false`, returns `google.rpc.Code.ABORTED` status when the server-selected timeout has expired (deprecated).","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["ListActiveBreakpointsResponse"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}}}},"protocols":["HTTPS"],"is":["hasParameters"],"securedBy":[{"oath2":{"scopes":["https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloud_debugger"]}}],"description":"Returns the list of all active breakpoints for the debuggee. The breakpoint specification (location, condition, and expression fields) is semantically immutable, although the field values may change. For example, an agent may update the location line number to reflect the actual line where the breakpoint was set, but this doesn't change the breakpoint semantics. This means that an agent does not need to check if a breakpoint has changed when it encounters the same breakpoint on a successive call. Moreover, an agent should remember the breakpoints that are completed until the controller removes them from the active list to avoid setting those breakpoints again.","displayName":"List","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"securedBy":["oath2"],"relativeUri":"/breakpoints","displayName":"/breakpoints","resources":[{"methods":[{"annotations":{"commons.Id":{"structuredValue":"clouddebugger.controller.debuggees.breakpoints.update","name":"commons.Id"},"commons.LogicalStructure":{"structuredValue":["Controller","Debuggees","Breakpoints"],"name":"commons.LogicalStructure"}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["UpdateActiveBreakpointResponse"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}}}},"body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["UpdateActiveBreakpointRequest"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"protocols":["HTTPS"],"is":["hasParameters"],"securedBy":[{"oath2":{"scopes":["https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloud_debugger"]}}],"description":"Updates the breakpoint state or mutable fields. The entire Breakpoint message must be sent back to the controller service. Updates to active breakpoint fields are only allowed if the new value does not change the breakpoint specification. Updates to the `location`, `condition` and `expression` fields should not alter the breakpoint semantics. These may only make changes such as canonicalizing a value or snapping the location to the correct line of code.","displayName":"Update","method":"put","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"securedBy":["oath2"],"uriParameters":{"id":{"name":"id","displayName":"id","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"Breakpoint identifier, unique in the scope of the debuggee.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"relativeUri":"/{id}","displayName":"/{id}","__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true},"displayName":{"calculated":true}}},"relativeUriPathSegments":["{id}"],"absoluteUri":"https://clouddebugger.googleapis.com/v2/controller/debuggees/{debuggeeId}/breakpoints/{id}"}],"__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true},"displayName":{"calculated":true}}},"relativeUriPathSegments":["breakpoints"],"absoluteUri":"https://clouddebugger.googleapis.com/v2/controller/debuggees/{debuggeeId}/breakpoints"}],"__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true},"displayName":{"calculated":true}}},"relativeUriPathSegments":["{debuggeeId}"],"absoluteUri":"https://clouddebugger.googleapis.com/v2/controller/debuggees/{debuggeeId}"}],"__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true},"displayName":{"calculated":true}}},"relativeUriPathSegments":["debuggees"],"absoluteUri":"https://clouddebugger.googleapis.com/v2/controller/debuggees"}],"__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true},"displayName":{"calculated":true}}},"relativeUriPathSegments":["controller"],"absoluteUri":"https://clouddebugger.googleapis.com/v2/controller"},{"securedBy":["oath2"],"relativeUri":"/debugger","displayName":"/debugger","resources":[{"methods":[{"annotations":{"commons.Id":{"structuredValue":"clouddebugger.debugger.debuggees.list","name":"commons.Id"},"commons.LogicalStructure":{"structuredValue":["Debugger","Debuggees"],"name":"commons.LogicalStructure"}},"queryParameters":{"includeInactive":{"name":"includeInactive","displayName":"includeInactive","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":false,"description":"When set to `true`, the result includes all debuggees. Otherwise, the result includes only debuggees that are active.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"project":{"name":"project","displayName":"project","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Project number of a Google Cloud project whose debuggees to list.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"clientVersion":{"name":"clientVersion","displayName":"clientVersion","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The client version making the call. Following: `domain/type/version` (e.g., `google.com/intellij/v1`).","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["ListDebuggeesResponse"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}}}},"protocols":["HTTPS"],"is":["hasParameters"],"securedBy":[{"oath2":{"scopes":["https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloud_debugger"]}}],"description":"Lists all the debuggees that the user can set breakpoints to.","displayName":"List","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"securedBy":["oath2"],"relativeUri":"/debuggees","displayName":"/debuggees","resources":[{"securedBy":["oath2"],"uriParameters":{"debuggeeId":{"name":"debuggeeId","displayName":"debuggeeId","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"ID of the debuggee where the breakpoint is to be set.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"relativeUri":"/{debuggeeId}","displayName":"/{debuggeeId}","resources":[{"methods":[{"annotations":{"commons.Id":{"structuredValue":"clouddebugger.debugger.debuggees.breakpoints.list","name":"commons.Id"},"commons.LogicalStructure":{"structuredValue":["Debugger","Debuggees","Breakpoints"],"name":"commons.LogicalStructure"}},"queryParameters":{"waitToken":{"name":"waitToken","displayName":"waitToken","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"A wait token that, if specified, blocks the call until the breakpoints list has changed, or a server selected timeout has expired. The value should be set from the last response. The error code `google.rpc.Code.ABORTED` (RPC) is returned on wait timeout, which should be called again with the same `wait_token`.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"includeInactive":{"name":"includeInactive","displayName":"includeInactive","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":false,"description":"When set to `true`, the response includes active and inactive breakpoints. Otherwise, it includes only active breakpoints.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"includeAllUsers":{"name":"includeAllUsers","displayName":"includeAllUsers","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":false,"description":"When set to `true`, the response includes the list of breakpoints set by any user. Otherwise, it includes only breakpoints set by the caller.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"stripResults":{"name":"stripResults","displayName":"stripResults","typePropertyKind":"TYPE_EXPRESSION","type":["boolean"],"required":false,"description":"When set to `true`, the response breakpoints are stripped of the results fields: `stack_frames`, `evaluated_expressions` and `variable_table`.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"clientVersion":{"name":"clientVersion","displayName":"clientVersion","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The client version making the call. Following: `domain/type/version` (e.g., `google.com/intellij/v1`).","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}},"action.value":{"name":"action.value","displayName":"action.value","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"Only breakpoints with the specified action will pass the filter.","enum":["CAPTURE","LOG"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["ListBreakpointsResponse"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}}}},"protocols":["HTTPS"],"is":["hasParameters"],"securedBy":[{"oath2":{"scopes":["https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloud_debugger"]}}],"description":"Lists all breakpoints for the debuggee.","displayName":"List","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"securedBy":["oath2"],"relativeUri":"/breakpoints","displayName":"/breakpoints","resources":[{"methods":[{"annotations":{"commons.Id":{"structuredValue":"clouddebugger.debugger.debuggees.breakpoints.set","name":"commons.Id"},"commons.LogicalStructure":{"structuredValue":["Debugger","Debuggees","Breakpoints"],"name":"commons.LogicalStructure"}},"queryParameters":{"clientVersion":{"name":"clientVersion","displayName":"clientVersion","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The client version making the call. Following: `domain/type/version` (e.g., `google.com/intellij/v1`).","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["SetBreakpointResponse"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}}}},"body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["Breakpoint"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}},"protocols":["HTTPS"],"is":["hasParameters"],"securedBy":[{"oath2":{"scopes":["https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloud_debugger"]}}],"description":"Sets the breakpoint to the debuggee.","displayName":"Set","method":"post","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"securedBy":["oath2"],"relativeUri":"/set","displayName":"/set","__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true},"displayName":{"calculated":true}}},"relativeUriPathSegments":["set"],"absoluteUri":"https://clouddebugger.googleapis.com/v2/debugger/debuggees/{debuggeeId}/breakpoints/set"},{"methods":[{"annotations":{"commons.Id":{"structuredValue":"clouddebugger.debugger.debuggees.breakpoints.get","name":"commons.Id"},"commons.LogicalStructure":{"structuredValue":["Debugger","Debuggees","Breakpoints"],"name":"commons.LogicalStructure"}},"queryParameters":{"clientVersion":{"name":"clientVersion","displayName":"clientVersion","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The client version making the call. Following: `domain/type/version` (e.g., `google.com/intellij/v1`).","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["GetBreakpointResponse"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}}}},"protocols":["HTTPS"],"is":["hasParameters"],"securedBy":[{"oath2":{"scopes":["https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloud_debugger"]}}],"description":"Gets breakpoint information.","displayName":"Get","method":"get","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}},{"annotations":{"commons.Id":{"structuredValue":"clouddebugger.debugger.debuggees.breakpoints.delete","name":"commons.Id"},"commons.LogicalStructure":{"structuredValue":["Debugger","Debuggees","Breakpoints"],"name":"commons.LogicalStructure"}},"queryParameters":{"clientVersion":{"name":"clientVersion","displayName":"clientVersion","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":false,"description":"The client version making the call. Following: `domain/type/version` (e.g., `google.com/intellij/v1`).","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"responses":{"200":{"code":"200","body":{"application/json":{"name":"application/json","displayName":"application/json","typePropertyKind":"TYPE_EXPRESSION","type":["Empty"],"__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true}}}}}}},"protocols":["HTTPS"],"is":["hasParameters"],"securedBy":[{"oath2":{"scopes":["https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloud_debugger"]}}],"description":"Deletes the breakpoint from the debuggee.","displayName":"Delete","method":"delete","__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}],"securedBy":["oath2"],"uriParameters":{"breakpointId":{"name":"breakpointId","displayName":"breakpointId","typePropertyKind":"TYPE_EXPRESSION","type":["string"],"required":true,"description":"ID of the breakpoint to get.","__METADATA__":{"primitiveValuesMeta":{"displayName":{"calculated":true},"required":{"insertedAsDefault":true}}}}},"relativeUri":"/{breakpointId}","displayName":"/{breakpointId}","__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true},"displayName":{"calculated":true}}},"relativeUriPathSegments":["{breakpointId}"],"absoluteUri":"https://clouddebugger.googleapis.com/v2/debugger/debuggees/{debuggeeId}/breakpoints/{breakpointId}"}],"__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true},"displayName":{"calculated":true}}},"relativeUriPathSegments":["breakpoints"],"absoluteUri":"https://clouddebugger.googleapis.com/v2/debugger/debuggees/{debuggeeId}/breakpoints"}],"__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true},"displayName":{"calculated":true}}},"relativeUriPathSegments":["{debuggeeId}"],"absoluteUri":"https://clouddebugger.googleapis.com/v2/debugger/debuggees/{debuggeeId}"}],"__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true},"displayName":{"calculated":true}}},"relativeUriPathSegments":["debuggees"],"absoluteUri":"https://clouddebugger.googleapis.com/v2/debugger/debuggees"}],"__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true},"displayName":{"calculated":true}}},"relativeUriPathSegments":["debugger"],"absoluteUri":"https://clouddebugger.googleapis.com/v2/debugger"}],"__METADATA__":{"primitiveValuesMeta":{"securedBy":{"calculated":true},"displayName":{"calculated":true}}},"relativeUriPathSegments":["v2"],"absoluteUri":"https://clouddebugger.googleapis.com/v2"}],"__METADATA__":{"primitiveValuesMeta":{"protocols":{"calculated":true}}}}